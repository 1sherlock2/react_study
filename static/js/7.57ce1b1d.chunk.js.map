{"version":3,"sources":["components/Common/FromControls/FormControl.module.css","components/Common/FromControls/FormControl.js","Utils/Validator/Validator.js","components/Common/FromControls/Input/Input.js","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","props","className","s","formControl","touched","error","children","requiredFiled","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","Input","restProps","maxLength20","minLength5","LoginForm","React","memo","onSubmit","handleSubmit","Field","component","name","validate","type","placeholder","style","formSummaryError","LoginReduxForm","reduxForm","form","connect","state","isAuth","authData","loginThunk","logoutThunk","to","login","formData","email","password","rememberMe"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,iBAAmB,wC,kHCE1GC,EAAc,SAAC,GAA2B,EAA1BC,MAA2B,IAApBC,EAAmB,EAAnBA,KAAQC,EAAW,gCACtD,OACC,yBAAKC,UAAS,UAAKC,IAAEC,YAAP,cAAwBJ,EAAKK,SAAWL,EAAKM,MAAQH,IAAEG,MAAQ,GAA/D,MACb,6BACEL,EAAMM,UAER,6BACGP,EAAKK,SAAWL,EAAKM,OAAS,kCAAQN,EAAKM,MAAb,S,iCCVpC,sGAAO,IAAME,EAAgB,SAAAC,GAC5B,IAAIA,EAEG,OAAKA,OAAL,EACC,qBAIIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC/C,GAAIA,EAAMG,OAASD,EAClB,MAAM,iBAAN,OAAwBA,EAAxB,cAMWE,EAAmB,SAACC,GAAD,OAAe,SAACL,GAC/C,GAAIA,EAAMG,OAASE,EAClB,MAAM,iBAAN,OAAwBA,EAAxB,e,yGCfWC,EAAQ,SAACd,GAAW,IAC3BF,EAA6BE,EAA7BF,MAAgBiB,GAAaf,EAAtBD,KADmB,YACGC,EADH,mBAE/B,OACC,kBAAC,IAAgBA,EAChB,2CAAWF,EAAWiB,O,0JCGrBC,EAAcP,YAAiB,IAC/BQ,EAAaL,YAAiB,GAE5BM,EAAYC,IAAMC,MAAK,SAAApB,GAC5B,OACC,yBAAKC,UAAU,UACd,0BAAMoB,SAAUrB,EAAMsB,cAAtB,IACC,6BACC,kBAACC,EAAA,EAAD,CAAOC,UAAWV,IAAOW,KAAM,QAASC,SAAU,CAACnB,IAAeS,GAAcW,KAAK,OACjFC,YAAY,WAEjB,6BACC,kBAACL,EAAA,EAAD,CAAOC,UAAWV,IAAOW,KAAM,WAAYC,SAAU,CAACnB,IAAeU,GAAaU,KAAK,WACnFC,YAAY,cAEjB,6BACC,kBAACL,EAAA,EAAD,CAAOC,UAAW,QAASC,KAAM,aAAcE,KAAK,cAEnD3B,EAAMK,MACL,yBAAKJ,UAAW4B,IAAMC,kBAAtB,MACC9B,EAAMK,OAEP,KACH,6BACC,4BAAQJ,UAAU,+BAA+B0B,KAAK,SAASF,KAAK,UAApE,iBAOQM,EAAiBC,YAAU,CACvCC,KAAM,SADuBD,CAE3Bd,G,uBCdYgB,uBANO,SAACC,GACtB,MAAO,CACNC,OAAQD,EAAME,SAASD,UAIe,CAACE,eAAYC,iBAAtCL,EAtBD,SAAClC,GAId,OAAqB,IAAjBA,EAAMoC,OACF,kBAAC,IAAD,CAAUI,GAAI,aAGpB,yBAAKvC,UAAWC,IAAEuC,OACjB,uCACA,kBAACV,EAAD,CAAgBV,SATJ,SAACqB,GACf1C,EAAMsC,WAAWI,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.57ce1b1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__Rk51P\",\"error\":\"FormControl_error__2DIn1\",\"formSummaryError\":\"FormControl_formSummaryError__2CUOO\"};","import React from \"react\";\nimport s from \"./FormControl.module.css\"\n\nexport const FormControl = ({input, meta,...props}) => {\n\treturn (\n\t\t<div className={`${s.formControl} + ${meta.touched && meta.error ? s.error : ''} `}>\n\t\t\t<div>\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t\t{meta.touched && meta.error && <span> {meta.error} </span>}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","export const requiredFiled = value => {\n\tif (value) {\n\t\treturn undefined\n\t} else if (!value) {\n\t\treturn \"Field is required\"\n\t}\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n\tif (value.length > maxLength) {\n\t\treturn `Max length is ${maxLength} symbols`\n\t}\n\treturn undefined\n}\n\n\nexport const minLengthCreator = (minLength) => (value) => {\n\tif (value.length < minLength) {\n\t\treturn `Min length is ${minLength} symbols`\n\t}\n\treturn undefined\n}\n\n\n\n","import React from \"react\";\nimport {FormControl} from \"../FormControl\";\n\nexport const Input = (props) => {\n\tlet {input, meta, ...restProps} = props\n\treturn (\n\t\t<FormControl {...props}>\n\t\t\t<input {...input} {...restProps} />\n\t\t</FormControl>\n\t)\n}","import React from \"react\";\nimport s from \"../Login.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../Common/FromControls/Input/Input\";\nimport {\n\tmaxLengthCreator, minLengthCreator,\n\trequiredFiled\n} from \"../../../Utils/Validator/Validator\";\nimport style from \"../../Common/FromControls/FormControl.module.css\"\n\nlet maxLength20 = maxLengthCreator(30)\nlet minLength5 = minLengthCreator(5)\n\nconst LoginForm = React.memo(props => {\n\treturn (\n\t\t<div className='col s8'>\n\t\t\t<form onSubmit={props.handleSubmit}> {/* (onSubmit (handleSubmit) ) */}\n\t\t\t\t<div>\n\t\t\t\t\t<Field component={Input} name={'email'} validate={[requiredFiled, maxLength20]} type=\"text\"\n\t\t\t\t\t\t\t\t placeholder=\"login\"/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field component={Input} name={'password'} validate={[requiredFiled, minLength5]} type=\"password\"\n\t\t\t\t\t\t\t\t placeholder=\"password\"/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field component={'input'} name={'rememberMe'} type=\"checkbox\"/>\n\t\t\t\t</div>\n\t\t\t\t{ props.error\n\t\t\t\t\t? <div className={style.formSummaryError}>   {/* {props.error} -> свойство, которое присутствует в методе onSubmit у 'redux-form' */}\n\t\t\t\t\t\t\t{props.error}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: null }\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"> Login </button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n})\n\nexport const LoginReduxForm = reduxForm({\n\tform: 'login',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// определенное наименование формы для ее идентификации, дабы отличать ее от других форм, которые у нас будут в дальнейшем\n})(LoginForm)","import React from \"react\";\nimport s from \"./Login.module.css\"\nimport {LoginReduxForm} from \"./LoginForm/LoginForm\";\nimport {connect} from \"react-redux\";\nimport {loginThunk, logoutThunk} from \"../../redux/Reducers/Auth_reducer\";\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = (props) => {\n\tlet onSubmit = (formData) => {\n\t\tprops.loginThunk(formData.email, formData.password, formData.rememberMe) \t\t\t\t\t\t//можно применить реструктуризацию\n\t}\n\tif (props.isAuth === true) {\n\t\treturn <Redirect to={\"/profile\"}/>\n\t} else {\n\t\treturn (\n\t\t\t<div className={s.login}>\n\t\t\t\t<h1> Login </h1>\n\t\t\t\t<LoginReduxForm onSubmit={onSubmit}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tisAuth: state.authData.isAuth,\n\t}\n}\n\nexport default connect(mapStateToProps, {loginThunk, logoutThunk})(Login)\n\n"],"sourceRoot":""}